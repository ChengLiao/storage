<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/jee
	http://www.springframework.org/schema/jee/spring-jee.xsd
	http://www.springframework.org/schema/cache
	http://www.springframework.org/schema/cache/spring-cache.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd"
       default-lazy-init="true">

    <!-- 启用缓存注解功能-->
    <cache:annotation-driven cache-manager="tdCacheManager"/>

    <!-- 数据源定义  -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driverClassName}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="minPoolSize" value="1"/>
        <property name="maxPoolSize" value="5"/>
    </bean>
    <bean id="dataSourceView" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${view.jdbc.driverClassName}"/>
        <property name="jdbcUrl" value="${view.jdbc.url}"/>
        <property name="user" value="${view.jdbc.username}"/>
        <property name="password" value="${view.jdbc.password}"/>
        <property name="minPoolSize" value="1"/>
        <property name="maxPoolSize" value="5"/>
    </bean>
<!--     <jee:jndi-lookup id="dataSource" jndi-name="TeradataDS" />
    <jee:jndi-lookup id="dataSourceView" jndi-name="TeradataDS" /> -->
    <!-- <jee:jndi-lookup id="dataSource" jndi-name="PostgreSQLDS"/> -->
    <!--<jee:jndi-lookup id="dataSourceView" jndi-name="PostgreSQLDS"/>-->

    <!-- 事务配置 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>


    <bean id="transactionManagerView"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSourceView"/>
    </bean>

    <!-- 使用annotation定义事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
    <tx:annotation-driven transaction-manager="transactionManagerView" proxy-target-class="true"/>

    <!-- 事务拦截 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="get*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <tx:advice id="txAdviceView" transaction-manager="transactionManagerView">
        <tx:attributes>
            <tx:method name="get*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <!-- 被拦截类配置 -->
    <aop:config>
        <aop:pointcut id="serviceOperation" expression="execution(* com.teradata..service.*Service.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation"/>
    </aop:config>

    <aop:config>
        <aop:pointcut id="serviceOperationView" expression="execution(* com.teradata..service.*Service.*(..))"/>
        <aop:advisor advice-ref="txAdviceView" pointcut-ref="serviceOperationView"/>
    </aop:config>

    <!-- FreeMarker配置 -->
    <bean id="freemarkerConfiguration" class="org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean">
        <property name="templateLoaderPath" value="classpath:/template/"/>
    </bean>

    <!--    &lt;!&ndash; 缓存配置 &ndash;&gt;
        <bean id="ehCacheManager"
              class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
            <property name="configLocation" value="classpath:ehcache.xml" />
            <property name="shared" value="true" />
        </bean>-->
    <!-- <context:property-placeholder location="classpath:config/redis.properties" /> -->
	<bean class="com.teradata.util.placeholder.EncryptPropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:config/redis.properties</value>
				<value>classpath:config/jdbc.properties</value>
			</list>
		</property>
		<property name="ignoreResourceNotFound" value="false"/>
	</bean>
<!--    <bean id="jedisConnectionFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:hostName="127.0.0.1"
          p:port="6379"
          p:usePool="true"
          p:password="Redsi@Th201608"
    />-->

    <bean id="jedisConnectionFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:hostName="${redis.host}"
          p:port="${redis.port}"
          p:usePool="${redis.usePool}"
          p:password="${redis.pass}"
    />
    <!-- redis template definition -->
    <bean id="redisTemplate"
          class="org.springframework.data.redis.core.RedisTemplate"
          p:connectionFactory-ref="jedisConnectionFactory"/>

    <!-- 定义Redis缓存  -->
    <bean id="tdCacheManager"
          class="com.teradata.cp.common.cache.TdRedisCacheManager"
          c:template-ref="redisTemplate"
          p:defaultCacheName="primaryCache"
            />

    <bean id="cacheUtil" class="com.teradata.cp.common.cache.CacheUtil">
        <property name="tdCacheManager" ref="tdCacheManager">
        </property>
    </bean>


    <!-- iBatis配置 -->
    <bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
        <!-- jboss5 不支持通配符* -->
        <property name="configLocations" value="classpath*:ibatis/**.ibatis.config.xml"/>
        <!-- <property name="configLocations" value="classpath*:demo.ibatis.config.xml"/> -->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="sqlMapClientView" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
        <!-- jboss5 不支持通配符* -->
        <property name="configLocations" value="classpath*:ibatis/**.ibatis.config.xml"/>
        <!-- <property name="configLocations" value="classpath*:demo.ibatis.config.xml"/> -->
        <property name="dataSource" ref="dataSourceView"/>
    </bean>

    <bean id="sqlExecutor" class="com.teradata.base.dialect.IbatisSqlExecutor">
        <property name="dialect">
            <bean class="com.teradata.base.dialect.impl.PostgreSQLDialect"/>
        </property>

    </bean>
    <bean id="ibatisGenericDao" class="com.teradata.base.dao.IBatisGenericDao" init-method="initialize">
        <property name="sqlExecutor">
            <ref bean="sqlExecutor"/>
        </property>
        <!--在使用PostgresSQL时需要标明-->
        <property name="dbType" value="POSTGRESQL"></property>
        <property name="sqlMapClient" ref="sqlMapClient"/>
    </bean>


    <!-- DAO定义 -->
    <bean id="commonDao" class="com.teradata.adf.core.dao.IBatisCommonDao">
        <property name="sqlMapClient" ref="sqlMapClient"></property>
    </bean>

    <bean id="commonDaoView" class="com.teradata.adf.core.dao.IBatisCommonDao">
        <property name="sqlMapClient" ref="sqlMapClientView"></property>
    </bean>

    <!-- 通用Service定义 -->
    <bean id="commonService" class="com.teradata.adf.core.service.CommonService">
        <property name="dao" ref="commonDao"></property>
    </bean>

    <bean id="commonServiceView" class="com.teradata.adf.core.service.CommonService">
        <property name="dao" ref="commonDaoView"></property>
    </bean>

    <!-- 数据导出定义 -->
    <bean id="exporterManager" class="com.teradata.adf.core.dataexport.ExporterManager">
        <property name="exporterMap">
            <map>
                <entry>
                    <key>
                        <value>csv</value>
                    </key>
                    <bean id="csvExporter" class="com.teradata.adf.core.dataexport.CsvExporter"/>
                </entry>
                <entry>
                    <key>
                        <value>xls</value>
                    </key>
                    <bean id="excelExporter" class="com.teradata.adf.core.dataexport.ExcelExporter"/>
                </entry>
            </map>
        </property>
        <property name="dao" ref="commonDao"></property>
        <property name="cacheManager" ref="tdCacheManager"></property>
    </bean>

    <!-- 数据导入定义 -->
    <bean id="importerManager" class="com.teradata.adf.core.dataimport.ImporterManager">
        <property name="importerMap">
            <map>
                <entry>
                    <key>
                        <value>csv</value>
                    </key>
                    <bean id="csvImporter" class="com.teradata.adf.core.dataimport.CsvImporter"/>
                </entry>
                <entry>
                    <key>
                        <value>xls</value>
                    </key>
                    <bean id="excelImporter" class="com.teradata.adf.core.dataimport.ExcelImporter"/>
                </entry>
            </map>
        </property>
        <property name="dao" ref="commonDao"></property>
        <property name="cacheManager" ref="tdCacheManager"></property>
    </bean>

    <context:component-scan base-package="com.teradata"/>
</beans>
